<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd		
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.1.xsd	
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:oxm="http://www.springframework.org/schema/oxm" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int-http="http://www.springframework.org/schema/integration/http">
	
	<int:annotation-config/>
	
	<context:component-scan base-package="org.springframework.integration.samples.restolat"/>
	
	<!-- handler mapping implementation that is aware of inbound Spring Integration 
			http inbound gateway's and inbound adapter's with "path" attributes -->
	<bean class="org.springframework.integration.http.inbound.UriPathHandlerMapping"/>
	
	<!-- Inbound/Outbound Channels -->
	<int:channel id="userSearchRequest" />
	<int:channel id="userSearchResponse" />
	
	
	<int-http:inbound-gateway id="inboundUserSearchRequestGateway"		
		supported-methods="GET, POST" 
		request-channel="userSearchRequest"
		reply-channel="userSearchResponse"		
		mapped-response-headers="Return-Status, Return-Status-Msg, HTTP_RESPONSE_HEADERS"		
		view-name="/user" 
		path="/services/user/{id}/search"
		reply-timeout="50000">
				
		<int-http:header name="key" expression="#pathVariables.id"/>
		
	</int-http:inbound-gateway>
	
 
	<!-- Note: The default parameter name for favorParameter is 'format'. For instance, when this flag is true, a request for /services/user/{id}/search?format=json will result 
			in an MappingJacksonJsonView being resolved, while the Accept header can be the browser-defined text/html,application/xhtml+xml  -->
			
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />	
		<property name="defaultContentType" value="application/xml"/>
		<property name="favorParameter" value="true"/>	
		<property name="ignoreAcceptHeader" value="true" />		
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />				
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.integration.samples.restolat.json.view.ExtendedMappingJacksonJsonView" >
					<property name="objectMapper" ref="jaxbJacksonObjectMapper"/>
				</bean>	
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg ref="marshaller"/>					
				</bean>				
			</list>
		</property>				
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
					<property name="marshaller" ref="marshaller"/>
					<property name="unmarshaller" ref="marshaller"/>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="objectMapper" ref="jaxbJacksonObjectMapper"/>
				</bean>
			</list>
		</property>
	</bean>
	
	<oxm:jaxb2-marshaller id="marshaller" contextPath="org.springframework.integration.samples.restolat.domain" />
	
	<int:service-activator id="userServiceActivator" 
					input-channel="userSearchRequest"
					output-channel="userSearchResponse" 
					ref="userSearchService" 
					method="getUser" 
					requires-reply="true"  
					send-timeout="60000"/>
	
	<bean id="jaxbJacksonObjectMapper" class="org.springframework.integration.samples.restolat.json.JaxbJacksonObjectMapper"/>				

</beans>	